[{"D:\\rentup\\rentup_frontend\\src\\index.js":"1","D:\\rentup\\rentup_frontend\\src\\App.js":"2","D:\\rentup\\rentup_frontend\\src\\store\\auth-context.js":"3","D:\\rentup\\rentup_frontend\\src\\core\\components\\TypePage\\TypePage.js":"4","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\HomePage.js":"5","D:\\rentup\\rentup_frontend\\src\\core\\components\\PostPage\\PostPage.js":"6","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageHousePage.js":"7","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRoomPage.js":"8","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageYourRequestPage.js":"9","D:\\rentup\\rentup_frontend\\src\\core\\components\\PostDetailPage\\PostDetailPage.js":"10","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentPage.js":"11","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentRequestPage.js":"12","D:\\rentup\\rentup_frontend\\src\\core\\components\\SigninPage\\SigninPage.js":"13","D:\\rentup\\rentup_frontend\\src\\core\\components\\SignupPage\\SignupPage.js":"14","D:\\rentup\\rentup_frontend\\src\\core\\components\\ForgetPasswordPage\\ForgetPasswordPage.js":"15","D:\\rentup\\rentup_frontend\\src\\core\\components\\AddHousePage\\AddHousePage.js":"16","D:\\rentup\\rentup_frontend\\src\\core\\components\\AddRoomPage\\AddRoomPage.js":"17","D:\\rentup\\rentup_frontend\\src\\core\\components\\EditRoomPage\\EditRoomPage.js":"18","D:\\rentup\\rentup_frontend\\src\\core\\components\\RentRegisterPage\\RentRegisterPage.js":"19","D:\\rentup\\rentup_frontend\\src\\core\\components\\EditHousePage\\EditHousePage.js":"20","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Page.js":"21","D:\\rentup\\rentup_frontend\\src\\api\\RoomApi.js":"22","D:\\rentup\\rentup_frontend\\src\\api\\AuthApi.js":"23","D:\\rentup\\rentup_frontend\\src\\api\\ProvinceApi.js":"24","D:\\rentup\\rentup_frontend\\src\\api\\HouseApi.js":"25","D:\\rentup\\rentup_frontend\\src\\api\\RentRequestApi.js":"26","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Back\\Back.js":"27","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\filter\\Filter.js":"28","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\Recent.js":"29","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\Type.js":"30","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\Landlord.js":"31","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequest.js":"32","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\ManageHouse.js":"33","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\LandlordCard.js":"34","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\ManageRoom.js":"35","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\RecentCard.js":"36","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequest.js":"37","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\ManageRent.js":"38","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Popup\\Popup.js":"39","D:\\rentup\\rentup_frontend\\src\\api\\CategoryApi.js":"40","D:\\rentup\\rentup_frontend\\src\\api\\UserApi.js":"41","D:\\rentup\\rentup_frontend\\src\\configs\\App.js":"42","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\TypeCard.js":"43","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\HouseCard.js":"44","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\RoomCard.js":"45","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequestCard.js":"46","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Header\\Header.js":"47","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequestCard.js":"48","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Footer\\Footer.js":"49","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\RentCard.js":"50","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Heading\\Heading.js":"51","D:\\rentup\\rentup_frontend\\src\\api\\NotificationApi.js":"52","D:\\rentup\\rentup_frontend\\src\\core\\components\\ProfilePage\\ProfilePage.js":"53","D:\\rentup\\rentup_frontend\\src\\core\\components\\ResetPasswordPage\\ResetPasswordPage.js":"54","D:\\rentup\\rentup_frontend\\src\\core\\components\\ChangePasswordPage\\ChangePasswordPage.js":"55"},{"size":463,"mtime":1667994667798,"results":"56","hashOfConfig":"57"},{"size":5011,"mtime":1670691703936,"results":"58","hashOfConfig":"57"},{"size":2761,"mtime":1669448818801,"results":"59","hashOfConfig":"57"},{"size":445,"mtime":1667892694286,"results":"60","hashOfConfig":"57"},{"size":654,"mtime":1668754900838,"results":"61","hashOfConfig":"57"},{"size":445,"mtime":1667921740131,"results":"62","hashOfConfig":"57"},{"size":234,"mtime":1668351297926,"results":"63","hashOfConfig":"57"},{"size":228,"mtime":1668351290968,"results":"64","hashOfConfig":"57"},{"size":252,"mtime":1669221485089,"results":"65","hashOfConfig":"57"},{"size":6226,"mtime":1670690314964,"results":"66","hashOfConfig":"57"},{"size":228,"mtime":1669469527266,"results":"67","hashOfConfig":"57"},{"size":252,"mtime":1669222208087,"results":"68","hashOfConfig":"57"},{"size":3345,"mtime":1670513097692,"results":"69","hashOfConfig":"57"},{"size":12271,"mtime":1670664336572,"results":"70","hashOfConfig":"57"},{"size":2365,"mtime":1670661984278,"results":"71","hashOfConfig":"57"},{"size":8004,"mtime":1670667659424,"results":"72","hashOfConfig":"57"},{"size":7262,"mtime":1670667585907,"results":"73","hashOfConfig":"57"},{"size":7741,"mtime":1670667820828,"results":"74","hashOfConfig":"57"},{"size":4944,"mtime":1670688819763,"results":"75","hashOfConfig":"57"},{"size":8702,"mtime":1670667710792,"results":"76","hashOfConfig":"57"},{"size":301,"mtime":1667892184186,"results":"77","hashOfConfig":"57"},{"size":3867,"mtime":1670666896041,"results":"78","hashOfConfig":"57"},{"size":2801,"mtime":1670661325067,"results":"79","hashOfConfig":"57"},{"size":695,"mtime":1668171578703,"results":"80","hashOfConfig":"57"},{"size":2609,"mtime":1670665604887,"results":"81","hashOfConfig":"57"},{"size":2979,"mtime":1670668640415,"results":"82","hashOfConfig":"57"},{"size":518,"mtime":1668067642111,"results":"83","hashOfConfig":"57"},{"size":6526,"mtime":1670678579258,"results":"84","hashOfConfig":"57"},{"size":3101,"mtime":1669482167636,"results":"85","hashOfConfig":"57"},{"size":1291,"mtime":1670678440840,"results":"86","hashOfConfig":"57"},{"size":3003,"mtime":1669552511051,"results":"87","hashOfConfig":"57"},{"size":5056,"mtime":1670346081600,"results":"88","hashOfConfig":"57"},{"size":3246,"mtime":1670689853004,"results":"89","hashOfConfig":"57"},{"size":1556,"mtime":1669475701413,"results":"90","hashOfConfig":"57"},{"size":4219,"mtime":1670689872000,"results":"91","hashOfConfig":"57"},{"size":1649,"mtime":1668692616691,"results":"92","hashOfConfig":"57"},{"size":5016,"mtime":1670346025710,"results":"93","hashOfConfig":"57"},{"size":4389,"mtime":1670689774219,"results":"94","hashOfConfig":"57"},{"size":408,"mtime":1669552810334,"results":"95","hashOfConfig":"57"},{"size":248,"mtime":1668691031282,"results":"96","hashOfConfig":"57"},{"size":1941,"mtime":1670662959581,"results":"97","hashOfConfig":"57"},{"size":1960,"mtime":1670695404421,"results":"98","hashOfConfig":"57"},{"size":436,"mtime":1668693560332,"results":"99","hashOfConfig":"57"},{"size":2986,"mtime":1670668218782,"results":"100","hashOfConfig":"57"},{"size":5571,"mtime":1670668166673,"results":"101","hashOfConfig":"57"},{"size":2565,"mtime":1670669468585,"results":"102","hashOfConfig":"57"},{"size":7578,"mtime":1670687614172,"results":"103","hashOfConfig":"57"},{"size":3433,"mtime":1670689065782,"results":"104","hashOfConfig":"57"},{"size":2072,"mtime":1667895404806,"results":"105","hashOfConfig":"57"},{"size":1787,"mtime":1669469728928,"results":"106","hashOfConfig":"57"},{"size":265,"mtime":1667736453482,"results":"107","hashOfConfig":"57"},{"size":345,"mtime":1669300138901,"results":"108","hashOfConfig":"57"},{"size":10995,"mtime":1670691703937,"results":"109","hashOfConfig":"57"},{"size":3533,"mtime":1670661879876,"results":"110","hashOfConfig":"57"},{"size":4183,"mtime":1670663483971,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ko87ck",{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\rentup\\rentup_frontend\\src\\index.js",[],[],"D:\\rentup\\rentup_frontend\\src\\App.js",[],[],"D:\\rentup\\rentup_frontend\\src\\store\\auth-context.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\TypePage\\TypePage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\HomePage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\PostPage\\PostPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageHousePage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRoomPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageYourRequestPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\PostDetailPage\\PostDetailPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\ManageRentRequestPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\SigninPage\\SigninPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\SignupPage\\SignupPage.js",["294","295","296"],[],"import { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { signupApi } from \"../../../api/AuthApi\";\r\nimport { getDistrict, getProvince, getWard } from \"../../../api/ProvinceApi\";\r\nimport img from \"../../../assets/img/backgroundSignin.jpg\";\r\nimport classes from \"./SignupPage.module.css\";\r\nimport Popup from \"../common/Popup/Popup\"\r\n\r\nconst SignupPage = () => {\r\n    const history = useHistory()\r\n    \r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    const imageRef = useRef()\r\n    \r\n    const [values, setValues] = useState({\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        username: '',\r\n        phone: '',\r\n        password: '',\r\n        password_repeat: '',\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        linkfb: '',\r\n        linkin: '',\r\n        linktw: '',\r\n        linkli: '',\r\n    })\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Sign up successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your account has been set up')\r\n    const [popupRedirect, setPopupRedirect] = useState(false)\r\n    \r\n    const {first_name, last_name, email, username, phone, password, password_repeat, city, district, ward, linkfb, linkin, linktw, linkli} = values\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    const redirectSigninPage = () => {\r\n        if(popupRedirect){\r\n            history.replace(\"/signin\")    \r\n        }else{\r\n            setPopup(false)\r\n        }\r\n    }\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        if(password !== password_repeat){\r\n            alert('password repeat not like password')\r\n            return;\r\n        }\r\n        \r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        \r\n        const data = {\r\n            first_name: first_name, \r\n            last_name: last_name, \r\n            email: email, \r\n            username: username, \r\n            phone: phone,  \r\n            password: password, \r\n            city: cityInput, \r\n            district: districtInput, \r\n            ward: wardInput, \r\n            linkfb: linkfb, \r\n            linkin: linkin, \r\n            linktw: linktw,  \r\n            linkli: linkli, \r\n            image: imageRef.current.files[0],\r\n        }\r\n        \r\n        signupApi(data)\r\n        .then((response) => {\r\n            console.log(response)\r\n            if(response.status === 400 && response.data.email){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Please enter a valid email address!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            if(response.status === 400 && response.data.phone){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Phone number already exists!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            if(response.status === 400 && response.data.phone){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Phone number already exists!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            if(response.status === 400 && response.data.username){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Username already exists!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            if(response.status === 400 && response.data.linkfb){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Link fb already exists!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            if(response.status === 400 && response.data.linkli){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Link li already exists!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            if(response.status === 400 && response.data.linktw){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Link tw already exists!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            if(response.status === 400 && response.data.linkin){\r\n                setPopup(true)\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('Link in already exists!')\r\n                setPopupRedirect(false)\r\n                return;\r\n            }\r\n            setPopupTitle('Sign up successfully')\r\n            setPopupDetail('Your account has been set up')\r\n            setPopupRedirect(true)\r\n            setPopup(true);\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <section className={classes.back}>\r\n            <div className={classes.center}>\r\n                <h1>Sign Up</h1>\r\n                <form method={classes.post} onSubmit={submitHandler}>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={first_name} onChange={handleChange('first_name')}/>\r\n                        <span></span>\r\n                        <label>First Name</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={last_name} onChange={handleChange('last_name')}/>\r\n                        <span></span>\r\n                        <label>Last Name</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={username} onChange={handleChange('username')}/>\r\n                        <span></span>\r\n                        <label>Username</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={email} onChange={handleChange('email')}/>\r\n                        <span></span>\r\n                        <label>Email</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={phone} onChange={handleChange('phone')}/>\r\n                        <span></span>\r\n                        <label>Phone Number</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={city}\r\n                            onChange={handleChange('city')}\r\n                        >\r\n                            {cityData.map(city => <option value={city.value} onChange={handleChange('city')}>{city.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>City</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={district}\r\n                            onChange={handleChange('district')}\r\n                        >\r\n                            {districtData.map(district => <option value={district.value} onChange={handleChange('district')}>{district.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>District</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={ward}\r\n                            onChange={handleChange('ward')}\r\n                        >\r\n                            {wardData.map(ward => <option value={ward.value} onChange={handleChange('ward')}>{ward.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Ward</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={linkfb} onChange={handleChange('linkfb')}/>\r\n                        <span></span>\r\n                        <label>Facebook</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={linkin} onChange={handleChange('linkin')}/>\r\n                        <span></span>\r\n                        <label>Instagram</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={linktw} onChange={handleChange('linktw')}/>\r\n                        <span></span>\r\n                        <label>Twitter</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={linkli} onChange={handleChange('linkli')}/>\r\n                        <span></span>\r\n                        <label>LinkedIn</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"file\" required ref={imageRef}/>\r\n                        <span></span>\r\n                        <label>Avatar</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"password\" required value={password} onChange={handleChange('password')}/>\r\n                        <span></span>\r\n                        <label>Password</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"password\" required value={password_repeat} onChange={handleChange('password_repeat')}/>\r\n                        <span></span>\r\n                        <label>Password repeat</label>\r\n                    </div>\r\n                    <button type=\"submit\">Sign Up</button>\r\n                    <div className={classes.signin_link}>\r\n                       Have a account? <Link to=\"signin\">Sign in</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <img src={img} alt='' />\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={redirectSigninPage}>Ok</button>\r\n            </Popup>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default SignupPage","D:\\rentup\\rentup_frontend\\src\\core\\components\\ForgetPasswordPage\\ForgetPasswordPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\AddHousePage\\AddHousePage.js",["297","298","299","300"],[],"import img from \"../../../assets/img/backgroundSignin.jpg\"\r\nimport classes from \"./AddHousePage.module.css\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport AuthContext from '../../../store/auth-context';\r\nimport {getProvince, getDistrict, getWard} from \"../../../api/ProvinceApi\"\r\nimport { createHouseApi } from \"../../../api/HouseApi\";\r\nimport Popup from \"../common/Popup/Popup\"\r\n\r\nconst typeData = [\r\n    {\r\n        text: \"Family House\",\r\n        value: \"0\"\r\n    },\r\n    {\r\n        text: \"House & Villa\",\r\n        value: \"1\"\r\n    },\r\n    {\r\n        text: \"Apartment\",\r\n        value: \"2\"\r\n    },\r\n    {\r\n        text: \"Office & Studio\",\r\n        value: \"3\"\r\n    },\r\n    {\r\n        text: \"Villa & Condo\",\r\n        value: \"4\"\r\n    },\r\n    \r\n]\r\n\r\nconst AddHousePage = () => {\r\n    const history = useHistory()\r\n    \r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Add House successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your house has been added')\r\n    const [popupRedirect, setPopupRedirect] = useState(false)\r\n    \r\n    const imageRef = useRef()\r\n    \r\n    const [values, setValues] = useState({\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        type: '0',\r\n        detail: '',\r\n        description: ''\r\n    })\r\n    \r\n    const {city, district, ward, type, detail, description} = values\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        const categoryInput = typeData.find(t => t.value == type).text\r\n        \r\n        const house = {\r\n            category: categoryInput,\r\n            city: cityInput,\r\n            district: districtInput,\r\n            ward: wardInput,\r\n            detail: detail,\r\n            description: description,\r\n            image: imageRef.current.files[0],\r\n        }\r\n        \r\n        createHouseApi(house, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Add House successfully')\r\n                setPopupDetail('Your house has been added!')\r\n                setPopupRedirect(true)\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const redirectToManagePage = () => {\r\n        if(popupRedirect){\r\n            history.replace(\"/manage\")    \r\n        }else{\r\n            setPopup(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <section className={classes.back}>\r\n            <div className={classes.center}>\r\n                <h1>Add House</h1>\r\n                <form method=\"POST\" onSubmit={submitHandler}>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={type}\r\n                            onChange={handleChange('type')}\r\n                        >\r\n                            {typeData.map(type => <option value={type.value}>{type.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Type</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={city}\r\n                            onChange={handleChange('city')}\r\n                        >\r\n                            {cityData.map(city => <option value={city.value}>{city.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>City</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={district}\r\n                            onChange={handleChange('district')}\r\n                        >\r\n                            {districtData.map(district => <option value={district.value}>{district.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>District</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={ward}\r\n                            onChange={handleChange('ward')}\r\n                        >\r\n                            {wardData.map(ward => <option value={ward.value}>{ward.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Ward</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={detail} onChange={handleChange('detail')}/>\r\n                        <span></span>\r\n                        <label>Detail</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={description} onChange={handleChange('description')}/>\r\n                        <span></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"file\" required ref={imageRef}/>\r\n                        <span></span>\r\n                        <label>Image</label>\r\n                    </div>\r\n                    <button type=\"submit\">Add</button>\r\n                    <div className={classes.signup_link}>\r\n                        <Link to=\"/\">home</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <img src={img} alt='' />\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={redirectToManagePage}>Ok</button>\r\n            </Popup>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AddHousePage ","D:\\rentup\\rentup_frontend\\src\\core\\components\\AddRoomPage\\AddRoomPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\EditRoomPage\\EditRoomPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\RentRegisterPage\\RentRegisterPage.js",["301"],[],"import Page from \"../common/Page\"\r\nimport classes from \"./RentRegisterPage.module.css\"\r\nimport RecentCard from \"../HomePage/Recent/RecentCard\";\r\nimport LandlordCard from \"../HomePage/landlord/LandlordCard\"\r\nimport Back from \"../common/Back/Back\"\r\nimport {getRoomByRoomId} from \"../../../api/RoomApi\"\r\nimport {createRentRequest} from \"../../../api/RentRequestApi\"\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport AuthContext from '../../../store/auth-context';\r\nimport { useParams } from 'react-router-dom';\r\nimport img from \"../../../assets/img/backgroundPost.jpg\"\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Popup from \"../common/Popup/Popup\"\r\n\r\n\r\n\r\nconst RentRegisterPage = () => {\r\n    const history = useHistory()\r\n    \r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [post, setPost] = useState({})\r\n    const [landlord, setLandlord] = useState({})\r\n    const messageInputRef = useRef()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Create request successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your request has been created!')\r\n    const [popupRedirect, setPopupRedirect] = useState(false)\r\n    \r\n    useEffect(() => {\r\n        getRoomByRoomId(id)\r\n        .then((data) => {\r\n            setPost({\r\n                room_id: data.id,\r\n                room_name: data.name,\r\n                cover: data.image,\r\n                category: data.category.name,\r\n                city: data.house.city,\r\n                district: data.house.district,\r\n                ward: data.house.ward,\r\n                totalPrice: data.totalPrice\r\n            })\r\n            setLandlord({\r\n                cover: data.house.landlord.image,\r\n                name: data.house.landlord.username,\r\n                address: data.house.landlord.city + ' - ' + data.house.landlord.district + ' - ' + data.house.landlord.ward,\r\n                phone: data.house.landlord.phone,\r\n                linkfb: data.house.landlord.linkfb,\r\n                linkin: data.house.landlord.linkin,\r\n                linktw: data.house.landlord.linktw,\r\n                linkli: data.house.landlord.linkli,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    const sendRequest = () => {\r\n        const data = {\r\n            room: id,\r\n            message: messageInputRef.current.value,\r\n        }\r\n        \r\n        createRentRequest(data, authCtx.token)\r\n        .then(response => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Create request successfully')\r\n                setPopupDetail('Your request has been created!')\r\n                setPopupRedirect(true)\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const redirectPage = () => {\r\n        if(popupRedirect){\r\n            history.replace('/manage/your_request')\r\n        }else{\r\n            setPopup(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Page>\r\n            <section>\r\n                <Back name='Rent Register' title='Your Rent Register' cover={img}/>\r\n                <section className={`${classes.recent} ${classes.padding}`}>\r\n                    <div className={classes.container}>\r\n                        <div className={`${classes.grid1} ${classes.mtop}`}>\r\n                            <div className={`${classes.shadow} ${classes.rentRequestCard}`} key={id}>\r\n                                <div className={classes.rentRequestCard_info}>\r\n                                    <RecentCard item={post}/>\r\n                                    <LandlordCard item={landlord}/>\r\n                                </div>\r\n                                <div className={classes.rentRequestCard_message}>\r\n                                    <h2>Message:</h2>\r\n                                    <textarea type=\"text\" ref={messageInputRef}/>\r\n                                </div>\r\n                                <div className={`${classes.rentRequestCard_action}`}>\r\n                                    <button onClick={sendRequest}>Send</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </section>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={redirectPage}>Ok</button>\r\n            </Popup>\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default RentRegisterPage","D:\\rentup\\rentup_frontend\\src\\core\\components\\EditHousePage\\EditHousePage.js",["302","303","304","305"],[],"import img from \"../../../assets/img/backgroundSignin.jpg\"\r\nimport classes from \"./EditHousePage.module.css\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext, useRef } from \"react\"\r\nimport AuthContext from '../../../store/auth-context';\r\nimport {getProvince, getDistrict, getWard} from \"../../../api/ProvinceApi\"\r\nimport { getHouseDetail, editHouse } from \"../../../api/HouseApi\";\r\nimport { useParams } from 'react-router-dom';\r\nimport Popup from \"../common/Popup/Popup\"\r\n\r\nconst typeData = [\r\n    {\r\n        text: \"Family House\",\r\n        value: \"1\"\r\n    },\r\n    {\r\n        text: \"House & Villa\",\r\n        value: \"2\"\r\n    },\r\n    {\r\n        text: \"Apartment\",\r\n        value: \"3\"\r\n    },\r\n    {\r\n        text: \"Office & Studio\",\r\n        value: \"4\"\r\n    },\r\n    {\r\n        text: \"Villa & Condo\",\r\n        value: \"5\"\r\n    },\r\n    \r\n]\r\n\r\nconst EditHousePage = () => {\r\n    const history = useHistory()\r\n    \r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    \r\n    const imageRef = useRef()\r\n    \r\n    const [values, setValues] = useState({\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        type: '1',\r\n        detail: '',\r\n        description: ''\r\n    })\r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Edit House successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your house has been updated!')\r\n    const [popupRedirect, setPopupRedirect] = useState(false)\r\n    \r\n    const {city, district, ward, type, detail, description} = values\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    useEffect(() => {\r\n        getHouseDetail(id, authCtx.token)\r\n        .then((data) => {\r\n            setValues({\r\n                city: '1',\r\n                district: '1',\r\n                ward: '1',\r\n                type: '1',\r\n                detail: data.detail,\r\n                description: data.description,\r\n            })\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n        \r\n    }, [id])\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        \r\n        const house = {\r\n            category: type,\r\n            city: cityInput,\r\n            district: districtInput,\r\n            ward: wardInput,\r\n            detail: detail,\r\n            description: description,\r\n            image: imageRef.current.files[0],\r\n        }\r\n        \r\n        editHouse(id, house, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n                setPopupRedirect(false)\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n                setPopupRedirect(true)\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const goBackPage = () => {\r\n        if(popupRedirect){\r\n            history.goBack()\r\n        }else{\r\n            setPopup(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <section className={classes.back}>\r\n            <div className={classes.center}>\r\n                <h1>Edit House</h1>\r\n                <form method=\"POST\" onSubmit={submitHandler}>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={type}\r\n                            onChange={handleChange('type')}\r\n                        >\r\n                            {typeData.map(type => <option value={type.value}>{type.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Type</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={city}\r\n                            onChange={handleChange('city')}\r\n                        >\r\n                            {cityData.map(city => <option value={city.value}>{city.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>City</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={district}\r\n                            onChange={handleChange('district')}\r\n                        >\r\n                            {districtData.map(district => <option value={district.value}>{district.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>District</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <select \r\n                            value={ward}\r\n                            onChange={handleChange('ward')}\r\n                        >\r\n                            {wardData.map(ward => <option value={ward.value}>{ward.text}</option>)}\r\n                        </select>\r\n                        <span></span>\r\n                        <label>Ward</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={detail} onChange={handleChange('detail')}/>\r\n                        <span></span>\r\n                        <label>Detail</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"text\" required value={description} onChange={handleChange('description')}/>\r\n                        <span></span>\r\n                        <label>Description</label>\r\n                    </div>\r\n                    <div className={classes.txt_field}>\r\n                        <input type=\"file\" required ref={imageRef}/>\r\n                        <span></span>\r\n                        <label>Image</label>\r\n                    </div>\r\n                    <button type=\"submit\">Submit</button>\r\n                    <div className={classes.signup_link}>\r\n                        <Link to=\"/\">home</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <img src={img} alt='' />\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={goBackPage}>Ok</button>\r\n            </Popup>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default EditHousePage ","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Page.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\RoomApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\AuthApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\ProvinceApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\HouseApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\RentRequestApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Back\\Back.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\filter\\Filter.js",["306","307","308","309"],[],"import classes from \"./Filter.module.css\"\r\nimport Heading from \"../../common/Heading/Heading\"\r\nimport {useState, useEffect} from \"react\"\r\nimport {getProvince, getDistrict, getWard} from \"../../../../api/ProvinceApi\"\r\nimport {getAllCategory} from \"../../../../api/CategoryApi\"\r\n\r\nconst Filter = (props) => {\r\n    const [cityData, setCityData] = useState([])\r\n    const [districtData, setDistrictData] = useState([])\r\n    const [wardData, setWardData] = useState([])\r\n    const [typeData, setTypeData] = useState([])\r\n    \r\n    const [values, setValues] = useState({\r\n        city: '1',\r\n        district: '1',\r\n        ward: '1',\r\n        type: '0',\r\n        priceMin: 0,\r\n        priceMax: 0\r\n    })\r\n    \r\n    const {city, district, ward, type, priceMin, priceMax} = values\r\n    \r\n    useEffect(() => {\r\n        getProvince().then(data => {\r\n            const tempCity = []\r\n            data.forEach(data => {\r\n                tempCity.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setCityData(tempCity)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        getDistrict(city).then(data => {\r\n            const tempDistrict = []\r\n            data.districts.forEach(data => {\r\n                tempDistrict.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setDistrictData(tempDistrict)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [city])\r\n    \r\n    useEffect(() => {\r\n        getWard(district).then(data => {\r\n            const tempWard = []\r\n            data.wards.forEach(data => {\r\n                tempWard.push({\r\n                    text: data.name,\r\n                    value: data.code,\r\n                })\r\n            })\r\n            setWardData(tempWard)\r\n        })\r\n        .catch(error => console.log('Error', error))\r\n    }, [district])\r\n    \r\n    useEffect(() => {\r\n        getAllCategory()\r\n        .then((data) => {\r\n            const temp = []\r\n            data.forEach(data => {\r\n                temp.push({\r\n                    text: data.name,\r\n                    img: data.image,\r\n                    value: data.id,\r\n                })\r\n            })\r\n            setTypeData(temp)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    const handleChange = (key) => {\r\n        return (event) => {\r\n            setValues({...values, [key]: event.target.value})\r\n        }\r\n    }\r\n    \r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        \r\n        const cityInput = cityData.find(c => c.value == city).text\r\n        const districtInput = districtData.find(d => d.value == district).text\r\n        const wardInput = wardData.find(w => w.value == ward).text\r\n        const categoryInput = typeData.find(t => t.value == type).text\r\n\r\n        const filter = {\r\n            category: categoryInput,\r\n            city: cityInput,\r\n            district: districtInput,\r\n            ward: wardInput,\r\n            min_price: priceMin,\r\n            max_price: priceMax\r\n        }\r\n\r\n        props.handleFilter(filter)\r\n    }\r\n    \r\n    return (\r\n        <section className={classes.filter}>\r\n            <div className={classes.container}>\r\n            <Heading title='Search Your Next Home ' subtitle='Find new & featured property located in your local city.' />\r\n\r\n            <form className={classes.flex}>\r\n                <div className={classes.box}>\r\n                    <span>City</span>\r\n                    <select \r\n                        id=\"city\" \r\n                        name=\"city\" \r\n                        value={city}\r\n                        onChange={handleChange('city')}\r\n                    >\r\n                        {cityData.map(city => <option value={city.value}>{city.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>District</span>\r\n                    <select \r\n                        id=\"district\" \r\n                        name=\"district\"\r\n                        value={district}\r\n                        onChange={handleChange('district')}\r\n                    >\r\n                        {districtData.map(district => <option value={district.value}>{district.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Ward</span>\r\n                    <select \r\n                        id=\"ward\" \r\n                        name=\"ward\"\r\n                        value={ward}\r\n                        onChange={handleChange('ward')}\r\n                    >\r\n                        {wardData.map(ward => <option value={ward.value}>{ward.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Property Type</span>\r\n                    <select \r\n                        id=\"type\" \r\n                        name=\"type\"\r\n                        value={type}\r\n                        onChange={handleChange('type')}\r\n                    >\r\n                        {typeData.map(type => <option value={type.value}>{type.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Price Max</span>\r\n                    <input \r\n                        type='number' \r\n                        placeholder='Price Max'\r\n                        value={priceMax}\r\n                        onChange={handleChange('priceMax')}\r\n                    />\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <span>Price Min</span>\r\n                    <input \r\n                        type='number' \r\n                        placeholder='Price Min'\r\n                        value={priceMin}\r\n                        onChange={handleChange('priceMin')}\r\n                    />\r\n                </div>\r\n                <div className={classes.box}>\r\n                    <h4>Advance Filter</h4>\r\n                </div>\r\n                <button type=\"submit\" onClick={submitHandler}>\r\n                    <i className='fa fa-search'></i>\r\n                </button>\r\n            </form>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Filter;","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\Recent.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\Type.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\Landlord.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequest.js",["310"],[],"import Back from \"../../common/Back/Back\"\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\"\r\nimport classes from \"./YourRequest.module.css\"\r\nimport YourRequestCard from \"./YourRequestCard\"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport {getAllRentRequestFromTenant} from \"../../../../api/RentRequestApi\"\r\nimport axios from \"axios\"\r\n\r\nconst ManagerHouse = () => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [requests, setRequests] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getAllRentRequestFromTenant(authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    room: {\r\n                        room_id: item.room.id,\r\n                        room_name: item.room.name,\r\n                        cover: item.room.image,\r\n                        category: item.room.category.name,\r\n                        city: item.room.house.city,\r\n                        district: item.room.house.district,\r\n                        ward: item.room.house.ward,\r\n                        totalPrice: item.room.totalPrice\r\n                    },\r\n                    landlord: {\r\n                        name: item.landlord.username,\r\n                        cover: item.landlord.image,\r\n                        address: item.landlord.city + ' - ' + item.landlord.district + ' - ' + item.landlord.ward,\r\n                        linkfb: item.landlord.linkfb,\r\n                        linkin: item.landlord.linkin,\r\n                        linktw: item.landlord.linktw,\r\n                        linkli: item.landlord.linkli,\r\n                    },\r\n                    message: item.message,\r\n                    id: item.id,\r\n                })\r\n            })\r\n            setRequests(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        room: {\r\n                            room_id: item.room.id,\r\n                            room_name: item.room.name,\r\n                            cover: item.room.image,\r\n                            category: item.room.category.name,\r\n                            city: item.room.house.city,\r\n                            district: item.room.house.district,\r\n                            ward: item.room.house.ward,\r\n                            totalPrice: item.room.totalPrice\r\n                        },\r\n                        landlord: {\r\n                            name: item.landlord.username,\r\n                            cover: item.landlord.image,\r\n                            address: item.landlord.city + ' - ' + item.landlord.district + ' - ' + item.landlord.ward,\r\n                            linkfb: item.landlord.linkfb,\r\n                            linkin: item.landlord.linkin,\r\n                            linktw: item.landlord.linktw,\r\n                            linkli: item.landlord.linkli,\r\n                        },\r\n                        message: item.message,\r\n                        id: item.id,\r\n                    })\r\n                })\r\n                setRequests(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Rent Request' title='Your Rent Request' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid1} ${classes.mtop}`}>\r\n                        {requests.map((item, index) => <YourRequestCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerHouse;","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\ManageHouse.js",["311"],[],"import Back from \"../../common/Back/Back\"\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\"\r\nimport classes from \"./ManageHouse.module.css\"\r\nimport HouseCard from \"./HouseCard\"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport {getOwnedHouseApi} from \"../../../../api/HouseApi\"\r\nimport axios from \"axios\"\r\n\r\nconst ManagerHouse = () => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [houses, setHouses] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getOwnedHouseApi(authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    id: item.id,\r\n                    cover: item.image,\r\n                    location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                    category: item.category.name,\r\n                })\r\n            })\r\n            setHouses(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        id: item.id,\r\n                        cover: item.image,\r\n                        location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                        category: item.category.name,\r\n                    })\r\n                })\r\n                setHouses(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n  \r\n    return (\r\n        <section>\r\n            <Back name='House' title='House Grid - Our Houses' cover={img} path=\"/add-house\" action=\"Add House\"/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid3} ${classes.mtop}`}>\r\n                        {houses.map((item, index) => <HouseCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerHouse;","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\landlord\\LandlordCard.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\ManageRoom.js",["312"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getRoomListOfHouse } from \"../../../../api/RoomApi\";\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\";\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Back from \"../../common/Back/Back\";\r\nimport classes from \"./ManageRoom.module.css\";\r\nimport RoomCard from \"./RoomCard\";\r\nimport axios from \"axios\"\r\n\r\nconst ManagerRoom = () => {\r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [rooms, setRooms] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getRoomListOfHouse(id, authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    id: item.id,\r\n                    cover: item.image,\r\n                    location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                    category: item.category.name,\r\n                    status: item.status,\r\n                    active: item.active,\r\n                    detail: item.detail,\r\n                    area: item.area,\r\n                    rent_price: item.rentPrice,\r\n                    water_price: item.waterPrice,\r\n                    electricity_price: item.electricPrice,\r\n                    service_price: item.servicePrice,\r\n                    totalPrice: item.totalPrice,\r\n                })\r\n            })\r\n            setRooms(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        id: item.id,\r\n                        cover: item.image,\r\n                        location: `${item.city} - ${item.district} - ${item.ward}`,\r\n                        category: item.category.name,\r\n                        status: item.status,\r\n                        active: item.active,\r\n                        detail: item.detail,\r\n                        area: item.area,\r\n                        rent_price: item.rentPrice,\r\n                        water_price: item.waterPrice,\r\n                        electricity_price: item.electricPrice,\r\n                        service_price: item.servicePrice,\r\n                        totalPrice: item.totalPrice,\r\n                    })\r\n                })\r\n                setRooms(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Room' title='Room Grid - Our Rooms' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid3} ${classes.mtop}`}>\r\n                        {rooms.map((item, index) => <RoomCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerRoom;","D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\Recent\\RecentCard.js",["313"],[],"import classes from \"./RecentCard.module.css\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst typeData = [\r\n    {\r\n        text: \"Family House\",\r\n        value: \"Family House\"\r\n    },\r\n    {\r\n        text: \"House & Villa\",\r\n        value: \"House & Villa\"\r\n    },\r\n    {\r\n        text: \"Apartment\",\r\n        value: \"Apartment\"\r\n    },\r\n    {\r\n        text: \"Office & Studio\",\r\n        value: \"Office & Studio\"\r\n    },\r\n    {\r\n        text: \"Villa & Condo\",\r\n        value: \"Villa & Condo\"\r\n    },\r\n    \r\n]\r\n\r\nconst RecentCard = props => {\r\n    return (\r\n        <Link className={`${classes.shadow} ${classes.recentCard}`} key={props.item.index} to={`/post/${props.item.room_id}`}>\r\n            <div className={classes.img}>\r\n                <img src={props.item.cover} alt='' />\r\n            </div>\r\n            <div className={classes.text}>\r\n                <div className={`${classes.category} ${classes.flex}`}>\r\n                    <span style={{ background: \"#ff98001a\", color: \"#ff9800\" }}>{props.item.category}</span>\r\n                </div>\r\n                <h4>{props.item.room_name}</h4>\r\n                <p>\r\n                    <i className='fa fa-location-dot'></i> {props.item.city} - {props.item.district} - {props.item.ward}\r\n                </p>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <div>\r\n                    <button className={classes.btn2}>{props.item.totalPrice} đ</button> <label htmlFor=''>/month</label>\r\n                </div>\r\n                <span>{props.item.category}</span>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default RecentCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequest.js",["314"],[],"import Back from \"../../common/Back/Back\"\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\"\r\nimport classes from \"./RentRequest.module.css\"\r\nimport RentRequestCard from \"./RentRequestCard\"\r\nimport { useState, useEffect, useContext } from \"react\"\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport {getAllRentRequestFromLandlord} from \"../../../../api/RentRequestApi\"\r\nimport axios from \"axios\"\r\n\r\nconst RentRequest = () => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [requests, setRequests] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    const [reload, setReload] = useState(false)\r\n    \r\n    const toggleReload = () => {\r\n        setReload(preState => !preState)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getAllRentRequestFromLandlord(authCtx.token)\r\n        .then((data) => {\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    room: {\r\n                        room_id: item.room.id,\r\n                        room_name: item.room.name,\r\n                        cover: item.room.image,\r\n                        category: item.room.category.name,\r\n                        city: item.room.house.city,\r\n                        district: item.room.house.district,\r\n                        ward: item.room.house.ward,\r\n                        totalPrice: item.room.totalPrice\r\n                    },\r\n                    tenant: {\r\n                        name: item.tenant.username,\r\n                        cover: item.tenant.image,\r\n                        address: item.tenant.city + ' - ' + item.tenant.district + ' - ' + item.tenant.ward,\r\n                        linkfb: item.tenant.linkfb,\r\n                        linkin: item.tenant.linkin,\r\n                        linktw: item.tenant.linktw,\r\n                        linkli: item.tenant.linkli,\r\n                    },\r\n                    message: item.message,\r\n                    id: item.id\r\n                })\r\n            })\r\n            setRequests(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [reload])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        room: {\r\n                            room_id: item.room.id,\r\n                            room_name: item.room.name,\r\n                            cover: item.room.image,\r\n                            category: item.room.category.name,\r\n                            city: item.room.house.city,\r\n                            district: item.room.house.district,\r\n                            ward: item.room.house.ward,\r\n                            totalPrice: item.room.totalPrice\r\n                        },\r\n                        tenant: {\r\n                            name: item.tenant.username,\r\n                            cover: item.tenant.image,\r\n                            address: item.tenant.city + ' - ' + item.tenant.district + ' - ' + item.tenant.ward,\r\n                            linkfb: item.tenant.linkfb,\r\n                            linkin: item.tenant.linkin,\r\n                            linktw: item.tenant.linktw,\r\n                            linkli: item.tenant.linkli,\r\n                        },\r\n                        message: item.message,\r\n                        id: item.id\r\n                    })\r\n                })\r\n                setRequests(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Rent Request' title='Your Rent Request' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid1} ${classes.mtop}`}>\r\n                        {requests.map((item, index) => <RentRequestCard item={item} index={index} reload={toggleReload}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default RentRequest;","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\ManageRent.js",["315","316"],[],"import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAllConfirmRequestFromTenant } from \"../../../../api/RentRequestApi\";\r\nimport img from \"../../../../assets/img/backgroundPost.jpg\";\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Back from \"../../common/Back/Back\";\r\nimport classes from \"./ManageRent.module.css\";\r\nimport RoomCard from \"./RentCard\";\r\nimport axios from \"axios\"\r\n\r\nconst ManagerRent = () => {\r\n    const params = useParams()\r\n\r\n    const id = params.id\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [rooms, setRooms] = useState([])\r\n    const [nextLink, setNextLink] = useState()\r\n    const [prevLink, setPrevLink] = useState()\r\n    \r\n    useEffect(() => {\r\n        getAllConfirmRequestFromTenant(authCtx.token)\r\n        .then((data) => {\r\n            console.log(data)\r\n            const tempData = []\r\n            data.results.forEach(item => {\r\n                tempData.push({\r\n                    id: item.room.id,\r\n                    cover: item.room.image,\r\n                    location: `${item.room.city} - ${item.room.district} - ${item.room.ward}`,\r\n                    category: item.room.category.name,\r\n                    status: item.room.status,\r\n                    active: item.room.active,\r\n                    detail: item.room.detail,\r\n                    area: item.room.area,\r\n                    rent_price: item.room.rentPrice,\r\n                    water_price: item.room.waterPrice,\r\n                    electricity_price: item.room.electricPrice,\r\n                    service_price: item.room.servicePrice,\r\n                    totalPrice: item.room.totalPrice,\r\n                    expriedAt: item.expires_at.substring(0, 10)\r\n                })\r\n            })\r\n            setRooms(tempData)\r\n            setNextLink(data.next)\r\n            setPrevLink(data.previous)\r\n        })\r\n        .catch((err) => {\r\n                alert(err.message);\r\n        });\r\n    }, [])\r\n    \r\n    const handlePagination = (url) => {\r\n        try{\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${authCtx.token}`\r\n                }\r\n            })\r\n            .then((response) =>{\r\n                const temp = []\r\n                response.data.results.forEach(item => {\r\n                    temp.push({\r\n                        id: item.room.id,\r\n                        cover: item.room.image,\r\n                        location: `${item.room.city} - ${item.room.district} - ${item.room.ward}`,\r\n                        category: item.room.category.name,\r\n                        status: item.room.status,\r\n                        active: item.room.active,\r\n                        detail: item.room.detail,\r\n                        area: item.room.area,\r\n                        rent_price: item.room.rentPrice,\r\n                        water_price: item.room.waterPrice,\r\n                        electricity_price: item.room.electricPrice,\r\n                        service_price: item.room.servicePrice,\r\n                        totalPrice: item.room.totalPrice,\r\n                        expriedAt: item.expires_at.substring(0, 10)\r\n                    })\r\n                })\r\n                setRooms(temp)\r\n                setNextLink(response.data.next)\r\n                setPrevLink(response.data.previous)\r\n            })\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n  \r\n    return (\r\n        <section>\r\n            <Back name='Room' title='Room Grid - Our Rooms' cover={img}/>\r\n            <section className={`${classes.recent} ${classes.padding}`}>\r\n                <div className={classes.container}>\r\n                    <div className={`${classes.grid3} ${classes.mtop}`}>\r\n                        {rooms.map((item, index) => <RoomCard item={item} index={index}/>)}\r\n                    </div>\r\n                    <div className={classes.paginations}>\r\n                        {prevLink && <button className={classes.previous} onClick={()=>handlePagination(prevLink)}>Previous</button>}\r\n                        {nextLink && <button className={classes.next} onClick={()=>handlePagination(nextLink)}>Next</button>}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ManagerRent;","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Popup\\Popup.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\CategoryApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\UserApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\configs\\App.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\HomePage\\type\\TypeCard.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\House\\HouseCard.js",["317"],[],"import { useContext, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteHouse } from '../../../../api/HouseApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport classes from \"./HouseCard.module.css\";\r\nimport Popup from \"../../common/Popup/Popup\"\r\n\r\nconst HouseCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your house has been deleted!')\r\n    \r\n    const deleteHandler = () => {\r\n        deleteHouse(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Delete House successfully')\r\n                setPopupDetail('Your house has been deleted!')\r\n            }\r\n            setPopup(true)\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.houseCard}`} key={props.item.index}>\r\n            <div className={classes.img}>\r\n                <img src={props.item.cover} alt='' />\r\n            </div>\r\n            <div className={classes.text}>\r\n                <h4>{props.item.category}</h4>\r\n                <p>\r\n                    <i className='fa fa-location-dot'></i> {props.item.location}\r\n                </p>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link to={`/manage/house/${props.item.id}/view`} className={classes.viewhouse}>view</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link to={`/manage/house/${props.item.id}/edit`} className={classes.edithouse}>Edit</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link to={`/manage/house/${props.item.id}/add-room`} className={classes.addroom}>Add Room</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link className={classes.deletehouse} onClick={deleteHandler}>Delete</Link>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HouseCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Room\\RoomCard.js",["318"],[],"import classes from \"./RoomCard.module.css\"\r\nimport { useContext, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { deleteRoom, postRoom, unPostRoom } from '../../../../api/RoomApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Popup from \"../../common/Popup/Popup\"\r\n\r\nconst RoomCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const history = useHistory()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your room has been updated!')\r\n    \r\n    const deleteHandler = () => {\r\n        deleteRoom(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const postHandler = () => {\r\n        postRoom(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const unPostHandler = () => {\r\n        unPostRoom(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400) {\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail('Some things went wrong!')\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Edit House successfully')\r\n                setPopupDetail('Your house has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.roomCard}`} key={props.item.index}>\r\n            <div className={classes.img}>\r\n                <img src={props.item.cover} alt='' />\r\n            </div>\r\n            <div className={classes.text}>\r\n                <div className={`${classes.category} ${classes.flex}`}>\r\n                    <span style={{ background: \"#ff98001a\", color: \"#ff9800\" }}>{props.item.active ? \"active\" : \"inactive\"}</span>\r\n                </div>\r\n                <h4>{props.item.category}</h4>\r\n                <p>\r\n                    <i class=\"fa fa-info\"></i> Info: {props.item.detail}\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-chart-area\"></i> Area: {props.item.area} m^2\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Rent price: {props.item.rent_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Water price: {props.item.water_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Electricity price: {props.item.electricity_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Services price: {props.item.service_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Total price: {props.item.totalPrice}đ / month\r\n                </p>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                {!props.item.active && <button className={classes.postRoom} onClick={postHandler}>Post</button>}\r\n                {props.item.active && <button className={classes.postRoom} onClick={unPostHandler}>UnPost</button>}\r\n                \r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <Link className={classes.editRoom} to={`/room/${props.item.id}/edit`}>Edit</Link>\r\n            </div>\r\n            <div className={`${classes.button} ${classes.flex}`}>\r\n                <button className={classes.btn3} onClick={deleteHandler}>Delete</button>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\YourRequest\\YourRequestCard.js",["319"],[],"import { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { cancel_rent_request } from '../../../../api/RentRequestApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport Popup from \"../../common/Popup/Popup\";\r\nimport LandlordCard from \"../../HomePage/landlord/LandlordCard\";\r\nimport RecentCard from \"../../HomePage/Recent/RecentCard\";\r\nimport classes from \"./YourRequestCard.module.css\";\r\n\r\nconst YourRequestCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const history = useHistory()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Cancel request successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Your request has been cancelled!')\r\n    \r\n    const cancelRentRequest = () => {\r\n        cancel_rent_request(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Cancel request successfully')\r\n                setPopupDetail('Your request has been cancelled!')\r\n            }\r\n           setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.rentRequestCard}`} key={props.item.index}>\r\n            <div className={classes.rentRequestCard_info}>\r\n                <RecentCard item={props.item.room}/>\r\n                <LandlordCard item={props.item.landlord}/>\r\n            </div>\r\n            <div className={classes.rentRequestCard_message}>\r\n                <h2>Message:</h2>\r\n                <p>{props.item.message}</p>\r\n            </div>\r\n            <div className={`${classes.rentRequestCard_action}`}>\r\n                <button onClick={cancelRentRequest}>Cancel</button>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\nexport default YourRequestCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Header\\Header.js",["320","321"],[],"import { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport logo from \"../../../../assets/img/logo.png\";\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport classes from \"./Header.module.css\";\r\nimport {getCurrentUser} from '../../../../api/UserApi'\r\nimport {getAllNotifications} from '../../../../api/NotificationApi'\r\n\r\nconst Data = [\r\n    {\r\n        text: \"home\",\r\n        path: \"/\",\r\n    },\r\n    {\r\n        text: \"about\",\r\n        path: \"/about\",\r\n    },\r\n    {\r\n        text: \"type\",\r\n        path: \"/type\",\r\n    },\r\n    {\r\n        text: \"post\",\r\n        path: \"/post\",\r\n    },\r\n    \r\n]\r\n\r\nconst Header = () => {\r\n    const history = useHistory()\r\n    \r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const [navList, setNavList] = useState(false)\r\n    const [user, setUser] = useState({})\r\n    const [notification, setNotification] = useState([])\r\n    const [switchRole, setSwitchRole] = useState(authCtx.role != 'user')\r\n    \r\n    useEffect(() => {\r\n        if(authCtx.isLoggedIn){\r\n            getCurrentUser(authCtx.token)\r\n            .then((data) => {\r\n                setUser({\r\n                    username: data.username,\r\n                    balance: data.balance\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n        }\r\n    }, [authCtx])\r\n    \r\n    useEffect(() => {\r\n        if(authCtx.isLoggedIn){\r\n            getAllNotifications(authCtx.token)\r\n            .then((data) => {\r\n                const temp = []\r\n                data.forEach(data => {\r\n                    temp.push({\r\n                        created_at: data.created_at.substring(0, 10),\r\n                        message: data.message\r\n                    })\r\n                })\r\n                setNotification(temp)\r\n            })\r\n            .catch((err) => {\r\n                alert(err.message);\r\n            });\r\n        }\r\n    }, [authCtx])\r\n    \r\n    useEffect(() => {\r\n        authCtx.changeRole(switchRole)\r\n    }, [switchRole])\r\n    \r\n    const logoutHandler = () => {\r\n        authCtx.logout();\r\n        history.replace(\"/signin\")\r\n    }\r\n    \r\n    const toggleRole = () => {\r\n        setSwitchRole(preState => !preState)\r\n    }\r\n    \r\n    return (\r\n        <header>\r\n            <div className={`${classes.container} ${classes.flex}`}>\r\n                <div> \r\n                    <img src={logo} alt='logo' />\r\n                </div>\r\n                <div className={classes.nav}>\r\n                    <ul className={classes.flex}>\r\n                        {Data.map((list, index) => (\r\n                            <li key={index}>\r\n                                <Link to={list.path}>{list.text}</Link>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <div className={classes.nav}>\r\n                    <ul className={navList ? classes.small : classes.hidden}>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                        <li><Link>Balance: {user.balance} <i class=\"fa-solid fa-coins\"></i></Link></li>\r\n                        <li><Link to={\"/profile\"}>Profile</Link></li>\r\n                        {authCtx.role === 'landlord' && \r\n                            <Fragment>\r\n                                <li><Link to={\"/manage\"}>My List</Link></li>\r\n                                <li><Link to={\"/manage/rent_request\"}>Rent Request</Link></li>\r\n                            </Fragment>\r\n                        }\r\n                        {authCtx.role === 'user' && \r\n                            <Fragment>\r\n                                <li><Link to={\"/manage/my_rent\"}>My rent</Link></li>\r\n                                <li><Link to={\"/manage/your_request\"}>My Request</Link></li>\r\n                            </Fragment>\r\n                        }\r\n                        <li><Link onClick={logoutHandler}>Logout</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className={`${classes.button} ${classes.flex} ${classes.account}`}>\r\n                    {user &&\r\n                        <div className={classes.switchRole}>\r\n                            <p>User</p>\r\n                            <div className={classes.switchRole_main}>\r\n                                <input type=\"checkbox\" hidden=\"hidden\" id=\"username\" onChange={toggleRole} defaultChecked={switchRole}/>\r\n                                <label className={classes.switch} for=\"username\"></label>\r\n                            </div>\r\n                            <p>Landlord</p>\r\n                        </div>\r\n                    } \r\n                    {user &&\r\n                        <div className={classes.notification}>\r\n                            <i class=\"fa-solid fa-bell\"></i>\r\n                            ({notification.length})    \r\n                            <ul className={classes.navbar_notifications}>\r\n                                {notification.map((item, index) =>\r\n                                    <li>\r\n                                        <p>{item.created_at}</p>\r\n                                        <h2>{item.message}</h2>\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    } \r\n                    {user && \r\n                        <Fragment>\r\n                            \r\n                            <Link className={classes.signin}>\r\n                                {user.username}\r\n                                <ul className={classes.navbar_account}>\r\n                                    <li><Link>Balance: {user.balance} <i class=\"fa-solid fa-coins\"></i></Link></li>\r\n                                    <li><Link to={\"/profile\"}>Profile</Link></li>\r\n                                    {authCtx.role === 'landlord' && \r\n                                        <Fragment>\r\n                                            <li><Link to={\"/manage\"}>My List</Link></li>\r\n                                            <li><Link to={\"/manage/rent_request\"}>Rent Request</Link></li>\r\n                                        </Fragment>\r\n                                    }\r\n                                    {authCtx.role === 'user' && \r\n                                        <Fragment>\r\n                                            <li><Link to={\"/manage/my_rent\"}>My rent</Link></li>\r\n                                            <li><Link to={\"/manage/your_request\"}>My Request</Link></li>\r\n                                        </Fragment>\r\n                                    }\r\n                                    <li><Link onClick={logoutHandler}>Logout</Link></li>\r\n                                </ul>\r\n                            </Link>\r\n                        </Fragment>\r\n                    }\r\n                    \r\n                    {!user && \r\n                        <Link to=\"/signin\" className={classes.signin}>\r\n                            <i className='fa fa-sign-out'></i> Sign In\r\n                        </Link>\r\n                    }\r\n                </div>\r\n\r\n                <div className={classes.toggle}>\r\n                    <button onClick={() => setNavList(!navList)}>\r\n                        {navList ? <i className='fa fa-times'></i> : <i className='fa fa-bars'></i>}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\RentRequest\\RentRequestCard.js",["322"],[],"import { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm_rent_request, reject_rent_request } from '../../../../api/RentRequestApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\nimport classes from \"./RentRequestCard.module.css\";\r\nimport RecentCard from \"../../HomePage/Recent/RecentCard\";\r\nimport LandlordCard from \"../../HomePage/landlord/LandlordCard\"\r\nimport Popup from \"../../common/Popup/Popup\";\r\n\r\nconst RentRequestCard = props => {\r\n    const authCtx = useContext(AuthContext)\r\n    \r\n    const history = useHistory()\r\n    \r\n    const [popup, setPopup] = useState(false)\r\n    const [popupTitle, setPopupTitle] = useState('Successfully')\r\n    const [popupDetail, setPopupDetail] = useState('Rent request has been updated!')\r\n    \r\n    const confirmRentRequest = () => {\r\n        confirm_rent_request(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Successfully')\r\n                setPopupDetail('Rent request has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const rejectRentRequest = () => {\r\n        reject_rent_request(props.item.id, authCtx.token)\r\n        .then((response) => {\r\n            if(response.status === 400){\r\n                setPopupTitle(response.statusText)\r\n                setPopupDetail(response.data)\r\n            }\r\n            if(response.status === 403){\r\n                setPopupTitle('Failed')\r\n                setPopupDetail('You do not have permission to perform this action!')\r\n            }\r\n            if(response.status === 200){\r\n                setPopupTitle('Successfully')\r\n                setPopupDetail('Rent request has been updated!')\r\n            }\r\n            setPopup(true)\r\n        })\r\n        .catch((err) => {\r\n            alert(err.message);\r\n        });\r\n    }\r\n    \r\n    const reloadPage = () => {\r\n        setPopup(false)\r\n        props.reload()\r\n    }\r\n    \r\n    return (\r\n        <div className={`${classes.shadow} ${classes.rentRequestCard}`} key={props.item.index}>\r\n            <div className={classes.rentRequestCard_info}>\r\n                <RecentCard item={props.item.room}/>\r\n                <LandlordCard item={props.item.tenant}/>\r\n            </div>\r\n            <div className={classes.rentRequestCard_message}>\r\n                <h2>Message:</h2>\r\n                <p>{props.item.message}</p>\r\n            </div>\r\n            <div className={`${classes.rentRequestCard_action}`}>\r\n                <button className={classes.rentRequestCard_confirm} onClick={confirmRentRequest}>Confirm</button>\r\n                <button onClick={rejectRentRequest}>Reject</button>\r\n            </div>\r\n            <Popup trigger={popup}>\r\n                <h3>{popupTitle}</h3>\r\n                <p>{popupDetail}</p>\r\n                <button type=\"button\" onClick={reloadPage}>Ok</button>\r\n            </Popup>\r\n        </div>\r\n    )\r\n}\r\nexport default RentRequestCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Footer\\Footer.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ManagePage\\Rent\\RentCard.js",["323","324","325","326","327"],[],"import classes from \"./RentCard.module.css\"\r\nimport { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteRoom, postRoom } from '../../../../api/RoomApi';\r\nimport AuthContext from '../../../../store/auth-context';\r\n\r\nconst RoomCard = props => {\r\n    return (\r\n        <div className={`${classes.shadow} ${classes.roomCard}`} key={props.item.index}>\r\n            <div className={classes.img}>\r\n                <img src={props.item.cover} alt='' />\r\n            </div>\r\n            <div className={classes.text}>\r\n                <h4>{props.item.category}</h4>\r\n                <p>\r\n                    <i class=\"fa fa-info\"></i> Info: {props.item.detail}\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-chart-area\"></i> Area: {props.item.area} m^2\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Rent price: {props.item.rent_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Water price: {props.item.water_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Electricity price: {props.item.electricity_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Services price: {props.item.service_price}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-money-check\"></i> Total price: {props.item.totalPrice}đ / month\r\n                </p>\r\n                <p>\r\n                    <i class=\"fa fa-hourglass-start\"></i> Expried at: {props.item.expriedAt}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomCard","D:\\rentup\\rentup_frontend\\src\\core\\components\\common\\Heading\\Heading.js",[],[],"D:\\rentup\\rentup_frontend\\src\\api\\NotificationApi.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ProfilePage\\ProfilePage.js",["328","329","330","331","332"],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ResetPasswordPage\\ResetPasswordPage.js",[],[],"D:\\rentup\\rentup_frontend\\src\\core\\components\\ChangePasswordPage\\ChangePasswordPage.js",[],[],{"ruleId":"333","severity":1,"message":"334","line":105,"column":54,"nodeType":"335","messageId":"336","endLine":105,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":106,"column":62,"nodeType":"335","messageId":"336","endLine":106,"endColumn":64},{"ruleId":"333","severity":1,"message":"334","line":107,"column":54,"nodeType":"335","messageId":"336","endLine":107,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":111,"column":54,"nodeType":"335","messageId":"336","endLine":111,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":112,"column":62,"nodeType":"335","messageId":"336","endLine":112,"endColumn":64},{"ruleId":"333","severity":1,"message":"334","line":113,"column":54,"nodeType":"335","messageId":"336","endLine":113,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":114,"column":58,"nodeType":"335","messageId":"336","endLine":114,"endColumn":60},{"ruleId":"337","severity":1,"message":"338","line":62,"column":8,"nodeType":"339","endLine":62,"endColumn":10,"suggestions":"340"},{"ruleId":"337","severity":1,"message":"341","line":123,"column":8,"nodeType":"339","endLine":123,"endColumn":12,"suggestions":"342"},{"ruleId":"333","severity":1,"message":"334","line":134,"column":54,"nodeType":"335","messageId":"336","endLine":134,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":135,"column":62,"nodeType":"335","messageId":"336","endLine":135,"endColumn":64},{"ruleId":"333","severity":1,"message":"334","line":136,"column":54,"nodeType":"335","messageId":"336","endLine":136,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":93,"column":54,"nodeType":"335","messageId":"336","endLine":93,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":94,"column":62,"nodeType":"335","messageId":"336","endLine":94,"endColumn":64},{"ruleId":"333","severity":1,"message":"334","line":95,"column":54,"nodeType":"335","messageId":"336","endLine":95,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":96,"column":58,"nodeType":"335","messageId":"336","endLine":96,"endColumn":60},{"ruleId":"337","severity":1,"message":"341","line":59,"column":8,"nodeType":"339","endLine":59,"endColumn":16,"suggestions":"343"},{"ruleId":"337","severity":1,"message":"341","line":41,"column":8,"nodeType":"339","endLine":41,"endColumn":16,"suggestions":"344"},{"ruleId":"337","severity":1,"message":"345","line":56,"column":8,"nodeType":"339","endLine":56,"endColumn":16,"suggestions":"346"},{"ruleId":"347","severity":1,"message":"348","line":4,"column":7,"nodeType":"349","messageId":"350","endLine":4,"endColumn":15},{"ruleId":"337","severity":1,"message":"341","line":59,"column":8,"nodeType":"339","endLine":59,"endColumn":16,"suggestions":"351"},{"ruleId":"347","severity":1,"message":"352","line":14,"column":11,"nodeType":"349","messageId":"350","endLine":14,"endColumn":13},{"ruleId":"337","severity":1,"message":"341","line":52,"column":8,"nodeType":"339","endLine":52,"endColumn":10,"suggestions":"353"},{"ruleId":"347","severity":1,"message":"354","line":2,"column":16,"nodeType":"349","messageId":"350","endLine":2,"endColumn":26},{"ruleId":"347","severity":1,"message":"355","line":11,"column":11,"nodeType":"349","messageId":"350","endLine":11,"endColumn":18},{"ruleId":"347","severity":1,"message":"355","line":13,"column":11,"nodeType":"349","messageId":"350","endLine":13,"endColumn":18},{"ruleId":"333","severity":1,"message":"356","line":37,"column":63,"nodeType":"335","messageId":"336","endLine":37,"endColumn":65},{"ruleId":"337","severity":1,"message":"357","line":75,"column":8,"nodeType":"339","endLine":75,"endColumn":20,"suggestions":"358"},{"ruleId":"347","severity":1,"message":"355","line":13,"column":11,"nodeType":"349","messageId":"350","endLine":13,"endColumn":18},{"ruleId":"347","severity":1,"message":"359","line":2,"column":10,"nodeType":"349","messageId":"350","endLine":2,"endColumn":20},{"ruleId":"347","severity":1,"message":"360","line":3,"column":10,"nodeType":"349","messageId":"350","endLine":3,"endColumn":14},{"ruleId":"347","severity":1,"message":"361","line":4,"column":10,"nodeType":"349","messageId":"350","endLine":4,"endColumn":20},{"ruleId":"347","severity":1,"message":"362","line":4,"column":22,"nodeType":"349","messageId":"350","endLine":4,"endColumn":30},{"ruleId":"347","severity":1,"message":"363","line":5,"column":8,"nodeType":"349","messageId":"350","endLine":5,"endColumn":19},{"ruleId":"337","severity":1,"message":"364","line":113,"column":8,"nodeType":"339","endLine":113,"endColumn":16,"suggestions":"365"},{"ruleId":"333","severity":1,"message":"334","line":122,"column":54,"nodeType":"335","messageId":"336","endLine":122,"endColumn":56},{"ruleId":"333","severity":1,"message":"334","line":123,"column":62,"nodeType":"335","messageId":"336","endLine":123,"endColumn":64},{"ruleId":"333","severity":1,"message":"334","line":124,"column":54,"nodeType":"335","messageId":"336","endLine":124,"endColumn":56},{"ruleId":"366","severity":1,"message":"367","line":166,"column":21,"nodeType":"368","endLine":166,"endColumn":44},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["369"],"React Hook useEffect has a missing dependency: 'authCtx.token'. Either include it or remove the dependency array.",["370"],["371"],["372"],"React Hook useEffect has missing dependencies: 'authCtx.token' and 'id'. Either include them or remove the dependency array.",["373"],"no-unused-vars","'typeData' is assigned a value but never used.","Identifier","unusedVar",["374"],"'id' is assigned a value but never used.",["375"],"'useHistory' is defined but never used.","'history' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'authCtx'. Either include it or remove the dependency array.",["376"],"'useContext' is defined but never used.","'Link' is defined but never used.","'deleteRoom' is defined but never used.","'postRoom' is defined but never used.","'AuthContext' is defined but never used.","React Hook useEffect has missing dependencies: 'authCtx.isLoggedIn' and 'authCtx.token'. Either include them or remove the dependency array.",["377"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"382","fix":"384"},{"desc":"385","fix":"386"},{"desc":"382","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},"Update the dependencies array to be: [id]",{"range":"394","text":"395"},"Update the dependencies array to be: [authCtx.token, id]",{"range":"396","text":"397"},"Update the dependencies array to be: [authCtx.token, reload]",{"range":"398","text":"399"},{"range":"400","text":"399"},"Update the dependencies array to be: [authCtx.token, id, reload]",{"range":"401","text":"402"},{"range":"403","text":"399"},"Update the dependencies array to be: [authCtx.token]",{"range":"404","text":"405"},"Update the dependencies array to be: [authCtx, switchRole]",{"range":"406","text":"407"},"Update the dependencies array to be: [authCtx.isLoggedIn, authCtx.token, reload]",{"range":"408","text":"409"},[2377,2379],"[id]",[3483,3487],"[authCtx.token, id]",[2320,2328],"[authCtx.token, reload]",[1408,1416],[1964,1972],"[authCtx.token, id, reload]",[2302,2310],[2018,2020],"[authCtx.token]",[2076,2088],"[authCtx, switchRole]",[3569,3577],"[authCtx.isLoggedIn, authCtx.token, reload]"]